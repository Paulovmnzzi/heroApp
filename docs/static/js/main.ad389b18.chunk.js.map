{"version":3,"sources":["auth/AuthContext.js","types/types.js","components/login/LoginScreen.js","data/heroes.js","components/heroes/HeroCard.js","components/heroes/HeroesList.js","selectors/GetHereoByPublisher.js","components/marvel/MarvelScreen.js","components/ui/Navbar.js","components/dc/DcScreen.js","components/heroes/HeroScreen.js","selectors/GetHeroeById.js","hooks/useForm.js","selectors/getHeroByName.js","components/search/SearchScreen.js","routers/DashboardRoute.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","auth/AuthReducer.js","HeroesApp.js","index.js"],"names":["AuthContext","createContext","types","LoginScreen","history","dispatch","useContext","action","type","payload","name","className","onClick","replace","heroes","HeroCard","heroe","id","superhero","alter_ego","first_appearance","characters","style","maxWidth","src","alt","to","HeroesList","publisher","useMemo","includes","Error","filter","hero","getHeroesByPublisher","map","MarvelScreen","Navbar","user","logged","useHistory","activeClassName","exact","localStorage","setItem","DcScreen","HeroScreen","heroId","useParams","find","length","push","goBack","useForm","initialState","useState","values","setValues","reset","handleInputChange","target","value","getHeroByName","toLocaleLowerCase","SearchScreen","location","useLocation","queryString","parse","search","q","searchForm","filtredHeroes","onSubmit","e","preventDefault","placeholder","vale","onChange","DashboardRoute","path","component","DCScreen","PrivateRoute","isAuthenticated","Component","rest","props","PublicRoute","AppRouter","AuthReducer","state","init","JSON","getItem","HeroesApp","useReducer","useEffect","stringify","Provider","ReactDOM","render","document","getElementById"],"mappings":"8KAKeA,EAHKC,0BCFPC,EACF,eADEA,EAED,gB,OCoCGC,EAlCK,SAAC,GAAe,IAAdC,EAAa,EAAbA,QAEXC,EAAYC,qBAAWN,GAAvBK,SAEDE,EAAS,CACXC,KAAMN,EACNO,QAAQ,CAAEC,KAAK,UAcnB,OACI,sBAAKC,UAAU,iBAAf,UACI,uCACA,uBAEA,wBACIA,UAAU,kBACVC,QAlBQ,WAEhBP,EAASE,GAETH,EAAQS,QAAQ,MAYZ,4B,OC7BCC,EAAS,CAClB,CACI,GAAM,YACN,UAAY,SACZ,UAAY,YACZ,UAAY,cACZ,iBAAmB,uBACnB,WAAa,eAEjB,CACI,GAAM,cACN,UAAY,WACZ,UAAY,YACZ,UAAY,SACZ,iBAAmB,mBACnB,WAAa,UAEjB,CACI,GAAM,WACN,UAAY,QACZ,UAAY,YACZ,UAAY,cACZ,iBAAmB,kBACnB,WAAa,oDAEjB,CACI,GAAM,WACN,UAAY,gBACZ,UAAY,YACZ,UAAY,aACZ,iBAAmB,0BACnB,WAAa,6FAEjB,CACI,GAAM,WACN,UAAY,cACZ,UAAY,YACZ,UAAY,eACZ,iBAAmB,sBACnB,WAAa,gBAEjB,CACI,GAAM,YACN,UAAY,eACZ,UAAY,YACZ,UAAY,iBACZ,iBAAmB,qBACnB,WAAa,kBAEjB,CACI,GAAM,aACN,UAAY,oBACZ,UAAY,YACZ,UAAY,eACZ,iBAAmB,wBACnB,WAAa,qBAEjB,CACI,GAAM,WACN,UAAY,kBACZ,UAAY,YACZ,UAAY,eACZ,iBAAmB,uBACnB,WAAa,gBAEjB,CACI,GAAM,UACN,UAAY,cACZ,UAAY,YACZ,UAAY,aACZ,iBAAmB,wBACnB,WAAa,qCAEjB,CACI,GAAM,WACN,UAAY,eACZ,UAAY,YACZ,UAAY,cACZ,iBAAmB,mBACnB,WAAa,4BAEjB,CACI,GAAM,gBACN,UAAY,aACZ,UAAY,gBACZ,UAAY,eACZ,iBAAmB,sBACnB,WAAa,gBAEjB,CACI,GAAM,iBACN,UAAY,kBACZ,UAAY,gBACZ,UAAY,eACZ,iBAAmB,4BACnB,WAAa,gBAEjB,CACI,GAAM,cACN,UAAY,WACZ,UAAY,gBACZ,UAAY,aACZ,iBAAmB,wBACnB,WAAa,cAEjB,CACI,GAAM,cACN,UAAY,OACZ,UAAY,gBACZ,UAAY,eACZ,iBAAmB,0BACnB,WAAa,gBAEjB,CACI,GAAM,cACN,UAAY,OACZ,UAAY,gBACZ,UAAY,eACZ,iBAAmB,yBACnB,WAAa,gBAEjB,CACI,GAAM,mBACN,UAAY,YACZ,UAAY,gBACZ,UAAY,gBACZ,iBAAmB,2BACnB,WAAa,iBAEjB,CACI,GAAM,mBACN,UAAY,YACZ,UAAY,gBACZ,UAAY,0BACZ,iBAAmB,eACnB,WAAa,2BAEjB,CACI,GAAM,iBACN,UAAY,UACZ,UAAY,gBACZ,UAAY,yBACZ,iBAAmB,wBACnB,WAAa,0BAEjB,CACI,GAAM,iBACN,UAAY,UACZ,UAAY,gBACZ,UAAY,gBACZ,iBAAmB,WACnB,WAAa,iBAEjB,CACI,GAAM,gBACN,UAAY,gBACZ,UAAY,gBACZ,UAAY,cACZ,iBAAmB,yBACnB,WAAa,gBC3HNC,EAjCE,SAACC,GAAW,IAEjBC,EAA2DD,EAA3DC,GAAIC,EAAuDF,EAAvDE,UAAWC,EAA4CH,EAA5CG,UAAWC,EAAiCJ,EAAjCI,iBAAkBC,EAAeL,EAAfK,WAEpD,OACI,qBAAKV,UAAU,YAAYW,MAAO,CAAEC,SAAU,KAA9C,SACI,sBAAKZ,UAAU,iBAAf,UACI,qBAAKA,UAAU,WAAf,SACI,qBAAKa,IAAG,0BAAqBP,EAArB,QAA+BN,UAAU,WAAWc,IAAKP,MAErE,qBAAKP,UAAU,WAAf,SACI,sBAAKA,UAAU,YAAf,UACI,qBAAIA,UAAU,aAAd,cAA6BO,EAA7B,OACA,oBAAGP,UAAU,YAAb,cAA2BQ,EAA3B,OAGKA,IAAcE,GACZ,oBAAGV,UAAU,YAAb,cAA2BU,EAA3B,OAGP,mBAAGV,UAAU,YAAb,SACI,wBAAOA,UAAU,aAAjB,cAAgCS,EAAhC,SAGJ,cAAC,IAAD,CAAMM,GAAE,iBAAYT,GAApB,kCCFTU,EArBI,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UAEZd,EAASe,mBAAQ,kBCJS,SAACD,GAIjC,IAFuB,CAAC,YAAa,iBAEjBE,SAASF,GACzB,MAAM,IAAIG,MAAO,aAAeH,EAAY,iBAGhD,OAAOd,EAAOkB,QAAQ,SAAAC,GAAI,OAAIA,EAAKL,YAAcA,KDJpBM,CAAqBN,KAAY,CAACA,IAE/D,OACI,qBAAKjB,UAAU,iDAAf,SAEQG,EAAOqB,KAAI,SAAAF,GAAI,OACX,cAAC,EAAD,aACItB,UAAU,wBAENsB,GADCA,EAAKhB,UEAnBmB,EAXM,WACjB,OACI,gCACI,+CACA,cAAC,EAAD,CACIR,UAAW,sBCqEZS,EAxEA,WAAO,IAAD,EAEU/B,qBAAWN,GAA9BsC,EAFS,EAETA,KAAMjC,EAFG,EAEHA,SACNkC,EAAiBD,EAAjBC,OAAQ7B,EAAS4B,EAAT5B,KACVN,EAAUoC,cAWhB,OACI,8BACI,sBAAK7B,UAAU,8CAAf,UACI,cAAC,IAAD,CACIA,UAAU,eACVe,GAAG,IAFP,0BAMA,qBAAKf,UAAU,kBAAf,SACI,sBAAKA,UAAU,aAAf,UACI,cAAC,IAAD,CACI8B,gBAAgB,SAChB9B,UAAU,oBACV+B,OAAK,EACLhB,GAAG,UAJP,oBAQA,cAAC,IAAD,CACIe,gBAAgB,SAChB9B,UAAU,oBACV+B,OAAK,EACLhB,GAAG,MAJP,gBAQA,cAAC,IAAD,CACIe,gBAAgB,SAChB9B,UAAU,oBACV+B,OAAK,EACLhB,GAAG,UAJP,yBAUR,qBAAKf,UAAU,wDAAf,SACI,qBAAIA,UAAU,qBAAd,UAGQ4B,GAAW,uBAAM5B,UAAU,8BAAhB,cAAgDD,EAAhD,OAEf,wBACIC,UAAU,wBACVC,QAtDH,WAIjBP,EAHe,CACXG,KAAMN,IAGVyC,aAAaC,QAAQ,OAAQ,IAC7BxC,EAAQS,QAAQ,WA8CA,+BCjDTgC,EAXE,WACb,OACI,gCACI,4CACA,cAAC,EAAD,CACIjB,UAAW,kBC8CZkB,EAlDI,SAAC,GAAe,IAAd1C,EAAa,EAAbA,QAET2C,EAAWC,cAAXD,OAEFd,EAAOJ,mBAAQ,kBCNKZ,EDMe8B,ECJ3BjC,EAAOmC,MAAK,SAAAhB,GAAI,OAAIA,EAAKhB,KAAOA,KAFrB,IAACA,IDMwB,CAAC8B,IAGnD,IAAKd,EACD,OAAO,cAAC,IAAD,CAAUP,GAAG,YAGxB,IAQQR,EAAkEe,EAAlEf,UAAWU,EAAuDK,EAAvDL,UAAWT,EAA4Cc,EAA5Cd,UAAWC,EAAiCa,EAAjCb,iBAAkBC,EAAeY,EAAfZ,WAG3D,OACI,sBAAKV,UAAU,WAAf,UACI,qBAAKA,UAAU,QAAf,SACI,qBAAKa,IAAG,0BAAqBuB,EAArB,QAAmCpC,UAAU,uDAAuDc,IAAKP,MAGrH,sBAAKP,UAAU,QAAf,UACI,6BAAKO,IACL,qBAAIP,UAAU,8BAAd,UACI,qBAAIA,UAAU,kBAAd,UAAgC,8CAAhC,IAAsDQ,KACtD,qBAAIR,UAAU,kBAAd,UAAgC,6CAAhC,IAAqDiB,EAArD,OACA,qBAAIjB,UAAU,kBAAd,UAAgC,qDAAhC,IAA6DS,QAEjE,4CACA,4BAAIC,IAEJ,wBACIV,UAAU,uBACVC,QA7BK,WACdR,EAAQ8C,QAAU,EACjB9C,EAAQ+C,KAAK,KAEb/C,EAAQgD,UAuBJ,2B,QEpBDC,EApBC,WAAwB,IAAvBC,EAAsB,uDAAP,GAAO,EAEPC,mBAASD,GAFF,mBAE5BE,EAF4B,KAEpBC,EAFoB,KAI7BC,EAAQ,WACVD,EAAUH,IAIRK,EAAoB,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACxBH,EAAU,2BACHD,GADE,kBAEJI,EAAOlD,KAAOkD,EAAOC,UAI9B,MAAO,CAACL,EAAQG,EAAmBD,I,iBCLxBI,EAXO,WAAgB,IAAfpD,EAAc,uDAAP,GAE1B,MAAa,KAATA,EACO,IAGXA,EAAOA,EAAKqD,oBAELjD,EAAOkB,QAAO,SAAAC,GAAI,OAAIA,EAAKf,UAAU6C,oBAAoBjC,SAASpB,QC6D9DsD,EAhEM,SAAC,GAAiB,IAAf5D,EAAc,EAAdA,QAGd6D,EAAWC,cAHiB,EAIfC,IAAYC,MAAMH,EAASI,QAAtCC,SAJ0B,MAItB,GAJsB,IAYMjB,EAAQ,CAAEgB,OAAQC,IAZxB,mBAY3BC,EAZ2B,KAYfZ,EAZe,KAa1BU,EAAWE,EAAXF,OAEFG,EAAgB3C,mBAAQ,kBAAMiC,EAAcQ,KAAI,CAACA,IASvD,OACI,sBAAK3D,UAAU,MAAf,UAEI,sBAAKA,UAAU,QAAf,UACI,6CACA,uBAEA,uBAAM8D,SAdG,SAACC,GAClBA,EAAEC,iBACFvE,EAAQ+C,KAAR,aAAmBkB,KAYX,UACI,uBACI7D,KAAK,OACLoE,YAAY,iBACZjE,UAAU,eACVkE,KAAMR,EACN3D,KAAK,SACLoE,SAAUnB,IAEd,wBACInD,KAAK,SACLG,UAAU,wCAFd,6BAOR,sBAAKA,UAAU,QAAf,UACI,yCACA,uBAEC6D,EAAcrC,KAAI,SAAAF,GAAI,OACnB,cAAC,EAAD,eAEQA,GADCA,EAAKhB,cClCnB8D,EAlBQ,WACnB,OACI,qCACE,cAAC,EAAD,IACA,qBAAKpE,UAAU,iBAAf,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAO+B,OAAK,EAACsC,KAAK,UAAUC,UAAW7C,IACvC,cAAC,IAAD,CAAOM,OAAK,EAACsC,KAAK,gBAAgBC,UAAWnC,IAC7C,cAAC,IAAD,CAAOJ,OAAK,EAACsC,KAAK,MAAMC,UAAWC,IACnC,cAAC,IAAD,CAAOxC,OAAK,EAACsC,KAAK,UAAUC,UAAWjB,IAEvC,cAAC,IAAD,CAAUtC,GAAG,qB,QCMhByD,EArBM,SAAC,GAIf,IAHHC,EAGE,EAHFA,gBACWC,EAET,EAFFJ,UACGK,EACD,+CAEF,OACI,mCACI,cAAC,IAAD,2BAAWA,GAAX,IAAiBL,UAAW,SAACM,GAAD,OACxBH,EAAkB,cAACC,EAAD,eAAeE,IAAY,cAAC,IAAD,CAAU7D,GAAG,kBCO3D8D,EAfK,SAAC,GAAsD,IAArDJ,EAAoD,EAApDA,gBAA4BC,EAAwB,EAAnCJ,UAAyBK,EAAU,+CAEtE,OACI,cAAC,IAAD,2BAAWA,GAAX,IAAkBL,UAAW,SAAAM,GAAK,OAC7BH,EAA8C,cAAC,IAAD,CAAU1D,GAAG,YAAzC,cAAC2D,EAAD,eAAeE,SCkB/BE,EAnBG,WAAO,IAEPlD,EAAYjC,qBAAWN,GAA7BsC,KAAMC,OAGd,OAEI,cAAC,IAAD,UACI,8BACI,eAAC,IAAD,WACI,cAAC,EAAD,CAAaG,OAAK,EAACsC,KAAK,SAASC,UAAW9E,EAAciF,gBAAiB7C,IAC3E,cAAC,EAAD,CAAcyC,KAAK,IAAIC,UAAWF,EAAgBK,gBAAiB7C,YCExEmD,EAnBK,WAAyB,IAAxBC,EAAuB,uDAAf,GAAIpF,EAAW,uCAExC,OAAQA,EAAOC,MACX,KAAKN,EACD,OAAO,2BACAK,EAAOE,SADd,IAEI8B,QAAQ,IAEhB,KAAKrC,EACD,MAAM,CACFqC,QAAQ,GAEhB,QACI,OAAOoD,ICTbC,EAAO,SAAC,GAAc,EAAbxF,QACX,OAAOyF,KAAKzB,MAAMzB,aAAamD,QAAQ,UAAY,CAAEvD,QAAQ,IAoBlDwD,EAfG,WAAO,IAAD,EAEKC,qBAAWN,EAAa,GAAIE,GAFjC,mBAEbtD,EAFa,KAEPjC,EAFO,KAOpB,OAJA4F,qBAAU,WACNtD,aAAaC,QAAQ,OAAQiD,KAAKK,UAAU5D,MAC7C,CAACA,IAIA,eAAC,EAAY6D,SAAb,CAAsBtC,MAAO,CAAEvB,OAAMjC,YAArC,oBACI,cAAC,EAAD,QClBZ+F,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.ad389b18.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nconst AuthContext = createContext();\r\n\r\n\r\nexport default AuthContext;","export const types = {                      //todos los types de la app\r\n    login: '[Auth] Login',\r\n    logout: '[Auth] Logout'\r\n}","import React, { useContext } from 'react'\r\nimport { types } from './../../types/types';\r\nimport AuthContext from '../../auth/AuthContext';\r\n\r\nconst LoginScreen = ({history}) => {\r\n\r\n    const {dispatch} = useContext(AuthContext);\r\n\r\n    const action = {\r\n        type: types.login,\r\n        payload:{ name:'Paulo'}\r\n    }\r\n\r\n    const handleLogin = () => {\r\n\r\n        dispatch(action);\r\n\r\n        history.replace('/');\r\n\r\n    }   \r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className='container mt-5'>\r\n            <h1>Login</h1>\r\n            <hr/> \r\n\r\n            <button\r\n                className='btn btn-primary'\r\n                onClick={handleLogin}\r\n            > Ingresar </button>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginScreen\r\n","export const heroes = [\r\n    {\r\n        'id': 'dc-batman',\r\n        'superhero':'Batman', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Bruce Wayne',\r\n        'first_appearance':'Detective Comics #27',\r\n        'characters':'Bruce Wayne'\r\n    },\r\n    {\r\n        'id': 'dc-superman',\r\n        'superhero':'Superman', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Kal-El',\r\n        'first_appearance':'Action Comics #1',\r\n        'characters':'Kal-El'\r\n    },\r\n    {\r\n        'id': 'dc-flash',\r\n        'superhero':'Flash', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Jay Garrick',\r\n        'first_appearance':'Flash Comics #1',\r\n        'characters':'Jay Garrick, Barry Allen, Wally West, Bart Allen'\r\n    },\r\n    {\r\n        'id': 'dc-green',\r\n        'superhero':'Green Lantern', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Alan Scott',\r\n        'first_appearance':'All-American Comics #16',\r\n        'characters':'Alan Scott, Hal Jordan, Guy Gardner, John Stewart, Kyle Raynor, Jade, Sinestro, Simon Baz'\r\n    },\r\n    {\r\n        'id': 'dc-arrow',\r\n        'superhero':'Green Arrow', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Oliver Queen',\r\n        'first_appearance':'More Fun Comics #73',\r\n        'characters':'Oliver Queen'\r\n    },\r\n    {\r\n        'id': 'dc-wonder',\r\n        'superhero':'Wonder Woman', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Princess Diana',\r\n        'first_appearance':'All Star Comics #8',\r\n        'characters':'Princess Diana'\r\n    },\r\n    {\r\n        'id': 'dc-martian',\r\n        'superhero':'Martian Manhunter', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'J\\'onn J\\'onzz',\r\n        'first_appearance':'Detective Comics #225',\r\n        'characters':'Martian Manhunter'\r\n    },\r\n    {\r\n        'id': 'dc-robin',\r\n        'superhero':'Robin/Nightwing', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Dick Grayson',\r\n        'first_appearance':'Detective Comics #38',\r\n        'characters':'Dick Grayson'\r\n    },\r\n    {\r\n        'id': 'dc-blue',\r\n        'superhero':'Blue Beetle', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Dan Garret',\r\n        'first_appearance':'Mystery Men Comics #1',\r\n        'characters':'Dan Garret, Ted Kord, Jaime Reyes'\r\n    },\r\n    {\r\n        'id': 'dc-black',\r\n        'superhero':'Black Canary', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Dinah Drake',\r\n        'first_appearance':'Flash Comics #86',\r\n        'characters':'Dinah Drake, Dinah Lance'\r\n    },\r\n    {\r\n        'id': 'marvel-spider',\r\n        'superhero':'Spider Man', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Peter Parker',\r\n        'first_appearance':'Amazing Fantasy #15',\r\n        'characters':'Peter Parker'\r\n    },\r\n    {\r\n        'id': 'marvel-captain',\r\n        'superhero':'Captain America', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Steve Rogers',\r\n        'first_appearance':'Captain America Comics #1',\r\n        'characters':'Steve Rogers'\r\n    },\r\n    {\r\n        'id': 'marvel-iron',\r\n        'superhero':'Iron Man', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Tony Stark',\r\n        'first_appearance':'Tales of Suspense #39',\r\n        'characters':'Tony Stark'\r\n    },\r\n    {\r\n        'id': 'marvel-thor',\r\n        'superhero':'Thor', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Thor Odinson',\r\n        'first_appearance':'Journey into Myster #83',\r\n        'characters':'Thor Odinson'\r\n    },\r\n    {\r\n        'id': 'marvel-hulk',\r\n        'superhero':'Hulk', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Bruce Banner',\r\n        'first_appearance':'The Incredible Hulk #1',\r\n        'characters':'Bruce Banner'\r\n    },\r\n    {\r\n        'id': 'marvel-wolverine',\r\n        'superhero':'Wolverine', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'James Howlett',\r\n        'first_appearance':'The Incredible Hulk #180',\r\n        'characters':'James Howlett'\r\n    },\r\n    {\r\n        'id': 'marvel-daredevil',\r\n        'superhero':'Daredevil', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Matthew Michael Murdock',\r\n        'first_appearance':'Daredevil #1',\r\n        'characters':'Matthew Michael Murdock'\r\n    },\r\n    {\r\n        'id': 'marvel-hawkeye',\r\n        'superhero':'Hawkeye', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Clinton Francis Barton',\r\n        'first_appearance':'Tales of Suspense #57',\r\n        'characters':'Clinton Francis Barton'\r\n    },\r\n    {\r\n        'id': 'marvel-cyclops',\r\n        'superhero':'Cyclops', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Scott Summers',\r\n        'first_appearance':'X-Men #1',\r\n        'characters':'Scott Summers'\r\n    },\r\n    {\r\n        'id': 'marvel-silver',\r\n        'superhero':'Silver Surfer', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Norrin Radd',\r\n        'first_appearance':'The Fantastic Four #48',\r\n        'characters':'Norrin Radd'\r\n    }\r\n]","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst HeroCard = (heroe) => {\r\n\r\n    const { id, superhero, alter_ego, first_appearance, characters } = heroe;\r\n\r\n    return (\r\n        <div className='card ms-3' style={{ maxWidth: 540 }}>\r\n            <div className='row no-gutters'>\r\n                <div className='col-md-4'>\r\n                    <img src={`./assets/heroes/${id}.jpg`} className='card-img' alt={superhero} />\r\n                </div>\r\n                <div className='col-md-8'>\r\n                    <div className='card-body'>\r\n                        <h5 className='card-title'> {superhero} </h5>\r\n                        <p className='card-text'> {alter_ego} </p>\r\n\r\n                        {\r\n                            (alter_ego !== characters) \r\n                            && <p className='card-text'> {characters} </p>\r\n                        }\r\n\r\n                        <p className='card-text'> \r\n                            <small className='text-muted'> {first_appearance} </small>\r\n                        </p>\r\n\r\n                        <Link to={`./hero/${id}`}>Más...</Link>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HeroCard\r\n","import React, { useMemo } from 'react'\r\nimport { getHeroesByPublisher } from './../../selectors/GetHereoByPublisher';\r\nimport HeroCard from './HeroCard';\r\n\r\nconst HeroesList = ({ publisher }) => {\r\n\r\n    const heroes = useMemo(() => getHeroesByPublisher(publisher), [publisher])\r\n\r\n    return (\r\n        <div className='card-columns animate__animated animate__fadeIn'>\r\n            {\r\n                heroes.map(hero => (\r\n                    <HeroCard\r\n                        className='list-group-item ms-3'\r\n                        key={hero.id}\r\n                        {...hero}\r\n                    >\r\n\r\n                    </HeroCard>\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HeroesList\r\n","import { heroes } from '../data/heroes'\r\n\r\nexport const getHeroesByPublisher = (publisher) => {\r\n\r\n    const validPublisher = ['DC Comics', 'Marvel Comics'];\r\n\r\n    if (!validPublisher.includes(publisher)){\r\n        throw new Error ('Publisher ' + publisher + 'no encontrado')\r\n    }\r\n\r\n    return heroes.filter( hero => hero.publisher === publisher);\r\n\r\n}","import React from 'react'\r\nimport HeroesList from '../heroes/HeroesList'\r\n\r\nconst MarvelScreen = () => {\r\n    return (\r\n        <div>\r\n            <h1>Marvel Screen</h1>\r\n            <HeroesList \r\n                publisher={'Marvel Comics'}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MarvelScreen\r\n","import React, { useContext } from 'react'\r\nimport { Link, NavLink, useHistory } from 'react-router-dom'\r\nimport AuthContext from '../../auth/AuthContext'\r\nimport { types } from './../../types/types';\r\n\r\nconst Navbar = () => {\r\n\r\n    const { user, dispatch } = useContext(AuthContext);\r\n    const { logged, name } = user;\r\n    const history = useHistory();\r\n\r\n    const handleLogout = () => {\r\n        const action = {\r\n            type: types.logout\r\n        }\r\n        dispatch(action);\r\n        localStorage.setItem('user', \"\");\r\n        history.replace('/Login');\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark\">\r\n                <Link\r\n                    className=\"navbar-brand\"\r\n                    to=\"/\"\r\n                >\r\n                    Asociaciones\r\n                </Link>\r\n                <div className=\"navbar-collapse\">\r\n                    <div className=\"navbar-nav\">\r\n                        <NavLink\r\n                            activeClassName=\"active\"\r\n                            className=\"nav-item nav-link\"\r\n                            exact\r\n                            to=\"/marvel\"\r\n                        >\r\n                            Marvel\r\n                        </NavLink>\r\n                        <NavLink\r\n                            activeClassName=\"active\"\r\n                            className=\"nav-item nav-link\"\r\n                            exact\r\n                            to=\"/dc\"\r\n                        >\r\n                            DC\r\n                        </NavLink>\r\n                        <NavLink\r\n                            activeClassName=\"active\"\r\n                            className=\"nav-item nav-link\"\r\n                            exact\r\n                            to=\"/Search\"\r\n                        >\r\n                            Search\r\n                        </NavLink>\r\n                    </div>\r\n                </div>\r\n                <div className=\"navbar-collapse collapse w-100 order-3 dual-collapse2\">\r\n                    <ul className=\"navbar-nav ml-auto\">\r\n\r\n                        {\r\n                            logged && (<span className='nav-item nav-link text-info'> {name} </span>)\r\n                        }\r\n                        <button\r\n                            className=\"nav-item nav-link btn\"\r\n                            onClick={handleLogout}\r\n                            \r\n                        >\r\n                            Logout\r\n                        </button>\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import React from 'react'\r\nimport HeroesList from '../heroes/HeroesList'\r\n\r\nconst DcScreen = () => {\r\n    return (\r\n        <div>\r\n            <h1> DC Screen</h1>\r\n            <HeroesList \r\n                publisher={'DC Comics'}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DcScreen\r\n","import React, { useMemo } from 'react'\r\nimport { Redirect, useParams } from 'react-router-dom'\r\nimport { getHeroesById } from './../../selectors/GetHeroeById';\r\n\r\nconst HeroScreen = ({history}) => {\r\n\r\n    const { heroId } = useParams();\r\n\r\n    const hero = useMemo(() => getHeroesById(heroId), [heroId])\r\n    \r\n\r\n    if (!hero) {\r\n        return <Redirect to='/marvel' />\r\n    }\r\n\r\n    const handleReturn = () => {\r\n        if(history.length <= 2){\r\n            history.push('/');\r\n        }else {\r\n            history.goBack();\r\n        }\r\n    }\r\n\r\n    const { superhero, publisher, alter_ego, first_appearance, characters } = hero\r\n\r\n\r\n    return (\r\n        <div className='row mt-5'>\r\n            <div className='col-4'>\r\n                <img src={`./assets/heroes/${heroId}.jpg`} className='img-thumbnail  animate__animated animate__fadeInLeft' alt={superhero} />\r\n            </div>\r\n\r\n            <div className='col-8'>\r\n                <h3>{superhero}</h3>\r\n                <ul className='list-group list-group-flush'>\r\n                    <li className='list-group-item'><b> Alter ego:  </b> {alter_ego}</li>\r\n                    <li className='list-group-item'><b> Publisher: </b> {publisher} </li>\r\n                    <li className='list-group-item'><b> First appearance:  </b> {first_appearance}</li>\r\n                </ul>\r\n                <h5>Characters</h5>\r\n                <p>{characters}</p>\r\n\r\n                <button \r\n                    className='btn btn-outline-info'\r\n                    onClick={handleReturn}\r\n                >\r\n                    Return\r\n                </button>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HeroScreen\r\n","import { heroes } from '../data/heroes'\r\n\r\nexport const getHeroesById = (id) => {\r\n\r\n    const hero =  heroes.find(hero => hero.id === id);\r\n\r\n    return hero;\r\n}","import { useState } from \"react\"\r\n\r\nconst useForm = (initialState = {}) => {\r\n\r\n    const [values, setValues] = useState(initialState)\r\n\r\n    const reset = () => {\r\n        setValues(initialState);\r\n    }\r\n\r\n\r\n    const handleInputChange = ({target}) => {\r\n        setValues({\r\n            ...values,\r\n            [target.name]: target.value,\r\n        })\r\n    }\r\n\r\n    return [values, handleInputChange, reset];\r\n    \r\n}\r\n\r\nexport default useForm\r\n","import { heroes } from \"../data/heroes\";\r\n\r\nconst getHeroByName = (name = '') => {\r\n\r\n    if (name === '') {\r\n        return []\r\n    }\r\n\r\n    name = name.toLocaleLowerCase();\r\n\r\n    return heroes.filter(hero => hero.superhero.toLocaleLowerCase().includes(name));\r\n\r\n}\r\nexport default getHeroByName;","import React, {  useMemo } from 'react'\r\nimport { useLocation } from 'react-router';\r\nimport useForm from '../../hooks/useForm';\r\nimport HeroCard from './../heroes/HeroCard';\r\nimport queryString from 'query-string'\r\nimport getHeroByName from '../../selectors/getHeroByName';\r\n\r\nconst SearchScreen = ({ history }) => {\r\n    \r\n    \r\n    const location = useLocation();                                 //obtengo el location de la página\r\n    const { q = '' } = queryString.parse(location.search);          //con la librería querySelector, parseo el search para obtener los valores limpios\r\n    \r\n    // const useQuery = () => {\r\n    //     return new URLSearchParams(useLocation().search);        //esta es una alternativa\r\n    // };                                                   \r\n    // const query = useQuery();\r\n    // console.log(query)\r\n    \r\n    const [searchForm, handleInputChange] = useForm({ search: q }); //traigo el state renombrandolo a search form y el handleInputChange de useForm y le asigno como valor inicial la query obtenida con queryString\r\n    const { search } = searchForm;                                  //obtengo el atributo search del objeto searchForm.\r\n\r\n    const filtredHeroes = useMemo(() => getHeroByName(q), [q])//aca filtraría los erues\r\n    \r\n    const handleSearch = (e) => {\r\n        e.preventDefault();\r\n        history.push(`?q=${search}`);\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className='row'>\r\n\r\n            <div className='col-5'>\r\n                <h4>Search form</h4>\r\n                <hr />\r\n\r\n                <form onSubmit={handleSearch}>\r\n                    <input\r\n                        type='text'\r\n                        placeholder='Find your hero'\r\n                        className='form-control'\r\n                        vale={search}\r\n                        name='search'\r\n                        onChange={handleInputChange}\r\n                    ></input>\r\n                    <button\r\n                        type='submit'\r\n                        className='btn m-1 btn-block btn-outline-primary'\r\n                    >Search...</button>\r\n\r\n                </form>\r\n            </div>\r\n            <div className='col-7'>\r\n                <h4>Results</h4>\r\n                <hr />\r\n\r\n                {filtredHeroes.map(hero => (\r\n                    <HeroCard\r\n                        key={hero.id}\r\n                        {...hero}\r\n                    />\r\n                ))}\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchScreen\r\n","import React from 'react'\r\nimport { Redirect, Route, Switch } from 'react-router-dom'\r\nimport MarvelScreen from '../components/marvel/MarvelScreen'\r\nimport Navbar from '../components/ui/Navbar'\r\nimport DCScreen from '../components/dc/DcScreen'\r\nimport HeroScreen from '../components/heroes/HeroScreen'\r\nimport SearchScreen from '../components/search/SearchScreen'\r\n\r\nconst DashboardRoute = () => {\r\n    return (\r\n        <>\r\n          <Navbar />  \r\n          <div className='container mt-3'>\r\n              <Switch>\r\n                  <Route exact path='/marvel' component={MarvelScreen} ></Route>\r\n                  <Route exact path='/hero/:heroId' component={HeroScreen} ></Route>\r\n                  <Route exact path='/dc' component={DCScreen}></Route>\r\n                  <Route exact path='/search' component={SearchScreen}   />\r\n\r\n                  <Redirect to='/marvel' />\r\n              </Switch>\r\n          </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DashboardRoute\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Route, Redirect } from 'react-router-dom'\r\n\r\nconst PrivateRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        <>\r\n            <Route {...rest} component={(props) => (\r\n                isAuthenticated ? <Component {...props} /> : <Redirect to='/Login' />\r\n            )}/>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default PrivateRoute;","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Route } from 'react-router'\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst PublicRoute = ({isAuthenticated, component: Component, ...rest}) => {\r\n\r\n    return (\r\n        <Route {...rest } component={props => (\r\n            !isAuthenticated ? <Component {...props} /> : (<Redirect to='/Marvel' /> )\r\n        )} /> \r\n    )\r\n}\r\n\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n\r\nexport default PublicRoute\r\n","import React, { useContext } from 'react'\r\nimport { HashRouter, Switch } from 'react-router-dom'\r\nimport AuthContext from '../auth/AuthContext'\r\nimport LoginScreen from '../components/login/LoginScreen'\r\nimport DashboardRoute from './DashboardRoute'\r\nimport PrivateRoute from './PrivateRoute'\r\nimport PublicRoute from './PublicRoute'\r\n\r\nconst AppRouter = () => {\r\n\r\n    const { user:{logged} } = useContext(AuthContext)\r\n\r\n\r\n    return (\r\n\r\n        <HashRouter>\r\n            <div>\r\n                <Switch>\r\n                    <PublicRoute exact path='/login' component={LoginScreen}  isAuthenticated={logged} />\r\n                    <PrivateRoute path='/' component={DashboardRoute} isAuthenticated={logged} />\r\n                </Switch>\r\n            </div>\r\n        </HashRouter>\r\n\r\n    )\r\n}\r\n\r\nexport default AppRouter\r\n","import { types } from './../types/types';\r\n\r\nconst AuthReducer = (state = {}, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.login:\r\n            return {\r\n                ...action.payload,\r\n                logged: true\r\n            }\r\n        case types.logout:\r\n            return{\r\n                logged: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default AuthReducer;","import React, { useEffect, useReducer } from 'react'\r\nimport AppRouter from './routers/AppRouter'\r\nimport AuthContext from './auth/AuthContext';\r\nimport AuthReducer from './auth/AuthReducer';\r\n// import { Redirect } from 'react-router';\r\n\r\nconst init = ({history}) => {\r\n    return JSON.parse(localStorage.getItem('user')) || { logged: false }       //Va a buscar del Local Storage si existe user, y si existe lo parseará a JSON\r\n    //en el caso de que no exista devolverá un objeto que contiene logged: false\r\n    \r\n}\r\n\r\nconst HeroesApp = () => {\r\n\r\n    const [user, dispatch] = useReducer(AuthReducer, {}, init)  //[RETURN, DISPATCH] = useReducer(EL REDUCER,  UN INITIAL STATE, UNA INICIALIZACION)\r\n    useEffect(() => {\r\n        localStorage.setItem('user', JSON.stringify(user));\r\n    }, [user]);\r\n\r\n    return (\r\n\r\n        <AuthContext.Provider value={{ user, dispatch }}>       {/*  el user y el dispatch son mandados a AppRouter, es decir, a toda la aplicación  */}\r\n            <AppRouter /> \r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n\r\nexport default HeroesApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport HeroesApp from './HeroesApp';\n\nReactDOM.render(\n    <HeroesApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}